{
  "env": {
    "node": true,
    "es6": true
  },
  "rules": {
    "no-buffer-constructor": [
      "error"
    ],
    "no-mixed-operators": [
      "error",
      {
        "groups": [
          [
            "&&",
            "||"
          ]
        ],
        "allowSamePrecedence": true
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ThrowStatement > CallExpression[callee.name=/Error$/]",
        "message": "Use new keyword when throwing an Error."
      }
    ],
    "accessor-pairs": [
      "error"
    ],
    "array-callback-return": [
      "error"
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "block-scoped-var": [
      "error"
    ],
    "block-spacing": [
      "error"
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "capitalized-comments": [
      "error",
      "always",
      {
        "line": {
          "ignorePattern": ".{0,20}$|[a-z]+ ?[0-9A-Z_.(/=:[#-]|std|http|ssh|ftp|(let|var|const) [a-z_A-Z0-9]+ =|[b-z] |[a-z]*[0-9].* ",
          "ignoreInlineComments": true,
          "ignoreConsecutiveComments": true
        },
        "block": {
          "ignorePattern": ".*"
        }
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "exports": "only-multiline",
        "functions": "only-multiline",
        "imports": "only-multiline",
        "objects": "only-multiline"
      }
    ],
    "comma-spacing": [
      "error"
    ],
    "comma-style": [
      "error"
    ],
    "computed-property-spacing": [
      "error"
    ],
    "constructor-super": [
      "error"
    ],
    "default-case-last": [
      "error"
    ],
    "dot-location": [
      "error",
      "property"
    ],
    "dot-notation": [
      "error"
    ],
    "eol-last": [
      "error"
    ],
    "eqeqeq": [
      "error",
      "smart"
    ],
    "for-direction": [
      "error"
    ],
    "func-call-spacing": [
      "error"
    ],
    "func-name-matching": [
      "error"
    ],
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "getter-return": [
      "error"
    ],
    "indent": [
      "error",
      2,
      {
        "ArrayExpression": "first",
        "CallExpression": {
          "arguments": "first"
        },
        "FunctionDeclaration": {
          "parameters": "first"
        },
        "FunctionExpression": {
          "parameters": "first"
        },
        "MemberExpression": "off",
        "ObjectExpression": "first",
        "SwitchCase": 1,
        "flatTernaryExpressions": false,
        "offsetTernaryExpressions": false,
        "ignoreComments": false
      }
    ],
    "key-spacing": [
      "error",
      {
        "mode": "strict"
      }
    ],
    "keyword-spacing": [
      "error"
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "new-parens": [
      "error"
    ],
    "no-confusing-arrow": [
      "error"
    ],
    "no-const-assign": [
      "error"
    ],
    "no-constructor-return": [
      "error"
    ],
    "no-debugger": [
      "error"
    ],
    "no-delete-var": [
      "error"
    ],
    "no-dupe-args": [
      "error"
    ],
    "no-dupe-class-members": [
      "error"
    ],
    "no-dupe-keys": [
      "error"
    ],
    "no-dupe-else-if": [
      "error"
    ],
    "no-duplicate-case": [
      "error"
    ],
    "no-else-return": [
      "error",
      {
        "allowElseIf": true
      }
    ],
    "no-empty-character-class": [
      "error"
    ],
    "no-ex-assign": [
      "error"
    ],
    "no-extra-boolean-cast": [
      "error"
    ],
    "no-extra-parens": [
      "error",
      "functions"
    ],
    "no-extra-semi": [
      "error"
    ],
    "no-fallthrough": [
      "error"
    ],
    "no-func-assign": [
      "error"
    ],
    "no-global-assign": [
      "error"
    ],
    "no-invalid-regexp": [
      "error"
    ],
    "no-irregular-whitespace": [
      "error"
    ],
    "no-lonely-if": [
      "error"
    ],
    "no-misleading-character-class": [
      "error"
    ],
    "no-mixed-requires": [
      "error"
    ],
    "no-mixed-spaces-and-tabs": [
      "error"
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": true
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
        "maxEOF": 0,
        "maxBOF": 0
      }
    ],
    "no-new-require": [
      "error"
    ],
    "no-new-symbol": [
      "error"
    ],
    "no-nonoctal-decimal-escape": [
      "error"
    ],
    "no-obj-calls": [
      "error"
    ],
    "no-octal": [
      "error"
    ],
    "no-path-concat": [
      "error"
    ],
    "no-proto": [
      "error"
    ],
    "no-redeclare": [
      "error",
      {
        "builtinGlobals": false
      }
    ],
    "no-restricted-properties": [
      "error",
      {
        "object": "assert",
        "property": "deepEqual",
        "message": "Use `assert.deepStrictEqual()`."
      },
      {
        "object": "assert",
        "property": "notDeepEqual",
        "message": "Use `assert.notDeepStrictEqual()`."
      },
      {
        "object": "assert",
        "property": "equal",
        "message": "Use `assert.strictEqual()` rather than `assert.equal()`."
      },
      {
        "object": "assert",
        "property": "notEqual",
        "message": "Use `assert.notStrictEqual()` rather than `assert.notEqual()`."
      },
      {
        "property": "__defineGetter__",
        "message": "__defineGetter__ is deprecated."
      },
      {
        "property": "__defineSetter__",
        "message": "__defineSetter__ is deprecated."
      }
    ],
    "no-return-await": [
      "error"
    ],
    "no-self-assign": [
      "error"
    ],
    "no-setter-return": [
      "error"
    ],
    "no-shadow-restricted-names": [
      "error"
    ],
    "no-tabs": [
      "error"
    ],
    "no-this-before-super": [
      "error"
    ],
    "no-throw-literal": [
      "error"
    ],
    "no-trailing-spaces": [
      "error"
    ],
    "no-undef": [
      "error",
      {
        "typeof": true
      }
    ],
    "no-undef-init": [
      "error"
    ],
    "no-unexpected-multiline": [
      "error"
    ],
    "no-unreachable": [
      "error"
    ],
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": false,
        "allowTaggedTemplates": false,
        "enforceForJSX": false
      }
    ],
    "no-unused-labels": [
      "error"
    ],
    "no-unused-vars": [
      "error",
      {
        "args": "none",
        "caughtErrors": "all"
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "classes": true,
        "functions": false,
        "variables": false
      }
    ],
    "no-useless-backreference": [
      "error"
    ],
    "no-useless-call": [
      "error"
    ],
    "no-useless-catch": [
      "error"
    ],
    "no-useless-concat": [
      "error"
    ],
    "no-useless-constructor": [
      "error"
    ],
    "no-useless-escape": [
      "error"
    ],
    "no-useless-return": [
      "error"
    ],
    "no-void": [
      "error"
    ],
    "no-whitespace-before-property": [
      "error"
    ],
    "no-with": [
      "error"
    ],
    "object-curly-newline": [
      "error"
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "one-var": [
      "error",
      {
        "initialized": "never"
      }
    ],
    "one-var-declaration-per-line": [
      "error"
    ],
    "operator-linebreak": [
      "error",
      "after"
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "function",
        "next": "function"
      }
    ],
    "prefer-const": [
      "error",
      {
        "ignoreReadBeforeAssign": true,
        "destructuring": "any"
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "quote-props": [
      "error",
      "consistent"
    ],
    "semi": [
      "error"
    ],
    "semi-spacing": [
      "error"
    ],
    "space-before-blocks": [
      "error",
      "always"
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-unary-ops": [
      "error"
    ],
    "strict": [
      "error",
      "global"
    ],
    "template-curly-spacing": [
      "error"
    ]
  }
}
